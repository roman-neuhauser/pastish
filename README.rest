.. vim: ft=rst sts=2 sw=2 tw=82
.. default-role:: strong

.. This file is marked up using reStructuredText.
   Lines beginning with ".." are reST directives.
   "foo_" or "`foo bar`_" is a link, defined at ".. _foo" or
   ".. _foo bar".
   "::" introduces a literal block (usually some form of code).
   "`foo`" is some kind of identifier.
   Suspicious backslashes in the text ("`std::string`\s") are required
   for reST to recognize the preceding character as syntax.

.. parsed-literal::

  `NAME`
       `pastish` — Tiny client for SUSE-related pastebin services

  `SYNOPSIS`
       `pastish` -h
       `pastish` [-A *API*] [-d *DESCRIPTION*] [-o *NAME=VALUE* ]...
               [-s *SYNTAX*] [-u *USERNAME*]
       `pastish` [-A *API*] [-o *NAME=VALUE* ]... `ID`

  `DESCRIPTION`
       `pastish` is a simple client for pastebin.suse.de and susepaste.org.

       Given a single snippet id, and possibly the `-A`, `-o` options,
       `pastish` will fetch the corresponding snippet, and display it
       on standard output.

       Given no arguments, and possibly any of the `-A`, `-d`, `-o`, `-s`, `-u`
       options, `pastish` will upload the contents of standard input, and
       display the resulting URL.

       `-h`   Display a usage description.

       `-A`   *API*
            Server uses *API* (either "int" or "ext").

       `-d`   *DESCRIPTION*
            Submit the snippet with *DESCRIPTION*.

       `-o`   *NAME=VALUE*
            Submit or fetch the snippet with form field *NAME* set to *VALUE*.

       `-s`   *SYNTAX*
            Use *SYNTAX* for highlighting.

       `-u`   *USERNAME*
            The author of the snippet is *USERNAME*.

       *ID* Fetch snippet with *ID*.

       `susepaste.org` snippets are private and expire in 24 hours.

  `ENVIRONMENT`
       `pastish` itself does not use any environment variables.  It is, however,
       implemented in terms of third-party commands which do use them.  This
       means `pastish` may be influenced by environment variables used by zsh(1),
       curl(1), possibly others.

  `FILES`
       `pastish` reads, in order, */etc/pastish* and *~/.pastish*.  These files,
       if present, are expected to be zsh(1)-compatible scripts; they may define
       any of the following variables:

       pastish_api
           Either "int" or "ext".  Defaults to "int".

       pastish_server
           Defaults to `$pastish_server_int` when `$pastish_api` is "int", and
           `$pastish_server_ext` when `$pastish_api` is "ext".

       pastish_server_int
           Defaults to "http://pastebin.suse.de/".

       pastish_server_ext
           Defaults to "http://susepaste.org/".

       pastish_user
           Any string identifying the submitter.
           Defaults to `$USER@$(hostname -f)`.

  `EXAMPLES`
     `Submit`
       % pastish -s python < ./a-file.py
       http://pastebin.suse.de/7890

     `Display`
       % pastish 7890
       if __name__ == '__main__'
         print("Hello world!")

  `DIAGNOSTICS`
       `pastish` exits with 0 on success, and with >0 otherwise.

  `SEE ALSO`
       SUSE pastebin server ⟨https://pastebin.suse.de⟩.
       openSUSE Paste ⟨http://susepaste.org⟩.

  `AUTHORS`
       Roman Neuhauser ⟨rneuhauser@suse.cz⟩.

       See ⟨https://github.com/roman-neuhauser/pastish/⟩.

  `BUGS`
       No doubt plentiful.  Please report them at
       ⟨https://github.com/roman-neuhauser/pastish/issues⟩.


